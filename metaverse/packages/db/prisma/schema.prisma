// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  email    String  @unique
  password String
  role     Role
  avatarId String?
  avatar   Avatar? @relation(fields: [avatarId], references: [id])
  spaces   Space[]
}

model Avatar {
  id       String @id @unique @default(cuid())
  imageUrl String
  name     String @unique
  users    User[]
}

model Element {
  id          String          @id @unique @default(cuid())
  imageUrl    String
  width       Int
  height      Int
  static      Boolean
  spaces      SpaceElements[]
  mapElements MapElements[]
}

model Map {
  id        String        @id @unique @default(cuid())
  thumbnail String?
  width     Int
  height    Int
  name      String
  elements  MapElements[]
}

model Space {
  id        String          @id @unique @default(cuid())
  name      String
  width     Int
  height    Int
  thumbnail String?
  creatorId String
  creator   User            @relation(fields: [creatorId], references: [id])
  elements  SpaceElements[]
}

model MapElements {
  id        String  @id @unique @default(cuid())
  elementId String
  mapId     String
  x         Int
  y         Int
  element   Element @relation(fields: [elementId], references: [id])
  map       Map     @relation(fields: [mapId], references: [id])
}

model SpaceElements {
  id        String  @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  element   Element @relation(fields: [elementId], references: [id])
  space     Space   @relation(fields: [spaceId], references: [id])
}
